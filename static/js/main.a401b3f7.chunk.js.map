{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","context.js","components/layout/InputGroup.js","components/contacts/AddContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/EditContact.js","containers/ContextWrap.js","App.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","About","NotFound","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","contacts","nextId","handleIconClick","id","map","c","showInfo","setState","handleDelete","filter","handleSubmit","data","e","objectSpread","toConsumableArray","preventDefault","handleUpdateSubmit","untouchedContacts","_ref","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","wrap","_context","prev","next","fetch","sent","json","_ref2","name","email","phone","stop","actions","children","Component","Consumer","InputGroup","type","label","placeholder","handleChange","error","htmlFor","onChange","AddContact","errors","_e$target","target","defineProperty","validate","keys","_this2","onSubmit","history","push","layout_InputGroup","Contact","_this$props$contact","contact","contactInfo","_data$actions","onClick","Contacts","Fragment","contacts_Contact","EditContact","_contacts$filter","context","Number","match","params","slicedToArray","_this3","_this$state","ContextWrap","contacts_EditContact","assign","App","context_Provider","layout_Header","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a401b3f7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\" /> Add\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\" /> About\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My app',\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage Contacts</p>\n      <p className=\"secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About;","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div className=\"text-center mt-5\">\n      <h1 className=\"display-4\">404 - Fuck off!</h1>\n      <p className=\"leade\">Page does not exist stupid!</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nconst Context = React.createContext();\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    nextId: 0,\n  };\n\n  async componentDidMount() {\n    const rawResponse = await fetch(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n    const data = await rawResponse.json();\n\n    const contacts = data.map(({ id, name, email, phone }) => {\n      return {\n        id,\n        name,\n        email,\n        phone,\n      };\n    });\n    const nextId = data.length + 1;\n    this.setState({\n      contacts,\n      nextId,\n    });\n  }\n\n  handleIconClick = (id) => {\n    const contacts = this.state.contacts.map((c) => {\n      if (c.id === id) {\n        c.showInfo = !c.showInfo;\n      }\n      return c;\n    });\n\n    this.setState({\n      contacts,\n    });\n  };\n\n  handleDelete = (id) => {\n    const contacts = this.state.contacts.filter((c) => c.id !== id);\n    this.setState({\n      contacts,\n    });\n  };\n\n  handleSubmit = (data, e) => {\n    const id = this.state.nextId;\n    const newContact = { ...data, id };\n    const contacts = [newContact, ...this.state.contacts];\n\n    this.setState({\n      contacts,\n      nextId: id + 1,\n    });\n\n    e.preventDefault();\n  };\n\n  handleUpdateSubmit = (data, e) => {\n    const untouchedContacts = this.state.contacts.filter(\n      ({ id }) => id !== data.id\n    );\n    const updatedContact = { ...data };\n    const contacts = [updatedContact, ...untouchedContacts];\n    this.setState({ contacts });\n\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          state: this.state,\n          actions: {\n            handleDelete: this.handleDelete,\n            handleIconClick: this.handleIconClick,\n            handleSubmit: this.handleSubmit,\n            handleUpdateSubmit: this.handleUpdateSubmit,\n          },\n        }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from 'react';\n\nconst InputGroup = ({\n  name,\n  type,\n  label,\n  placeholder,\n  value,\n  handleChange,\n  error,\n}) => (\n  <div className=\"form-group\">\n    <label htmlFor={name}>{label}</label>\n    <input\n      type={type}\n      name={name}\n      className={\n        error\n          ? 'form-control form-control-lg is-invalid'\n          : 'form-control form-control-lg'\n      }\n      placeholder={placeholder}\n      value={value}\n      onChange={handleChange}\n    />\n    <div className=\"invalid-feedback\">{error}</div>\n  </div>\n);\n\nInputGroup.defaultProps = {\n  type: 'text',\n};\n\nexport default InputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport InputGroup from '../layout/InputGroup';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // Check if fields are valid on form submit\n  validate = () => {\n    // Clear errors on every submit\n    this.setState({ errors: {} });\n\n    // Initialize local errors object\n    const errors = {};\n\n    // checks if inputs are empty\n    for (let key in this.state) {\n      if (this.state[key] === '') {\n        // build error message for each empty field\n        errors[key] = `${key} field is required`;\n      }\n    }\n\n    if (Object.keys(errors).length) {\n      this.setState({ errors });\n      return false;\n    }\n    return true;\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {(data) => {\n          const { handleSubmit } = data.actions;\n          const { errors } = this.state;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form\n                  onSubmit={(e) => {\n                    // Get form validation result\n                    const isValid = this.validate();\n\n                    if (isValid) {\n                      handleSubmit(this.state, e);\n                      this.setState({\n                        name: '',\n                        email: '',\n                        phone: '',\n                        errors: {},\n                      });\n\n                      // Redirect on success\n                      this.props.history.push('/');\n                    } else {\n                      e.preventDefault();\n                    }\n                  }}\n                >\n                  <InputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={this.state.name}\n                    handleChange={this.handleChange}\n                    error={errors.name}\n                  />\n                  <InputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={this.state.email}\n                    handleChange={this.handleChange}\n                    error={errors.email}\n                  />\n                  <InputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={this.state.phone}\n                    handleChange={this.handleChange}\n                    error={errors.phone}\n                  />\n                  <button className=\"btn btn-block btn-primary\">\n                    Add Contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport {Link} from 'react-router-dom';\n\nclass Contact extends Component {\n  render() {\n    const { id, name, email, phone, showInfo } = this.props.contact;\n\n    const contactInfo = (\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">Email: {email}</li>\n        <li className=\"list-group-item\">Phone: {phone}</li>\n      </ul>\n    );\n\n    return (\n      <Consumer>\n        {(data) => {\n          const { handleIconClick, handleDelete } = data.actions;\n          return (\n            <div className=\"card card-body mb-3 contact\">\n              <h4>\n                {name}{' '}\n                <i\n                  className={showInfo ? 'fas fa-sort-up' : 'fas fa-sort-down'}\n                  onClick={() => handleIconClick(id)}\n                />\n              </h4>\n              {showInfo ? contactInfo : null}\n              <div className=\"btn-group btn-group-sm mt-2 ml-auto\">\n                <Link to={`/contact/edit/${id}`} className=\"btn btn-primary mr-1\">EDIT</Link>\n                <button\n                  className=\"btn btn-danger\"\n                  onClick={() => handleDelete(id)}\n                >\n                  DELETE\n                </button>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.defaultProps = {\n  name: 'Enter Name',\n  email: 'Enter email',\n  phone: '111-111-1111',\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(data) => {\n          const { contacts } = data.state;\n\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span>LIST</h1>\n              {contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport InputGroup from '../layout/InputGroup';\n\nclass EditContact extends Component {\n  state = {\n    id: '',\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  componentDidMount() {\n    // match contact id from provider\n    const { contacts } = this.props.context.state;\n    const [contact] = contacts.filter(({ id }) => {\n      return id === Number(this.props.match.params.id);\n    });\n    this.setState({ ...contact });\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // Check if fields are valid on form submit\n  validate = () => {\n    // Clear errors on every submit\n    this.setState({ errors: {} });\n\n    // Initialize local errors object\n    const errors = {};\n\n    // checks if inputs are empty\n    for (let key in this.state) {\n      if (this.state[key] === '') {\n        // build error message for each empty field\n        errors[key] = `${key} field is required`;\n      }\n    }\n\n    if (Object.keys(errors).length) {\n      this.setState({ errors });\n      return false;\n    }\n    return true;\n  };\n\n  render() {\n    const { handleUpdateSubmit } = this.props.context.actions;\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form\n            onSubmit={(e) => {\n              // Get form validation result\n              const isValid = this.validate();\n\n              if (isValid) {\n                handleUpdateSubmit(this.state, e);\n                this.setState({\n                  name: '',\n                  email: '',\n                  phone: '',\n                  errors: {},\n                });\n\n                // Redirect on success\n                this.props.history.push('/');\n              } else {\n                e.preventDefault();\n              }\n            }}\n          >\n            <InputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Edit Name...\"\n              value={name}\n              handleChange={this.handleChange}\n              error={errors.name}\n            />\n            <InputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Edit Email...\"\n              value={email}\n              handleChange={this.handleChange}\n              error={errors.email}\n            />\n            <InputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Edit Phone...\"\n              value={phone}\n              handleChange={this.handleChange}\n              error={errors.phone}\n            />\n            <button className=\"btn btn-block btn-primary\">Save Contact</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport { Consumer } from '../context';\nimport EditContact from '../components/contacts/EditContact';\n\nconst ContextWrap = (props) => {\n  return <Consumer>{(context) => <EditContact {...props} context={context} />}</Consumer>;\n};\n\nexport default ContextWrap;\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport AddContact from './components/contacts/AddContact';\nimport Contacts from './components/contacts/Contacts';\nimport ContextWrap from './containers/ContextWrap';\nimport { Provider } from './context';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div>\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                {/**\n                 * ContextWrap\n                 * - is HOC\n                 * - wraps EditContact\n                 * - gives access to Cosumer value outside render\n                 */}\n                <Route exact path=\"/contact/edit/:id\" component={ContextWrap} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}